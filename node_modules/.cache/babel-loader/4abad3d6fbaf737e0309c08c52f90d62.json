{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\shiarora\\\\Projects\\\\cypress-egghead-course\\\\src\\\\components\\\\TodoItem.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\n\nvar TodoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TodoItem, _Component);\n\n  function TodoItem() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoItem);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoItem)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      editing: false\n    };\n\n    _this.handleDoubleClick = function () {\n      _this.setState({\n        editing: true\n      });\n    };\n\n    _this.handleSave = function (todo, text) {\n      if (text.length === 0) {\n        _this.props.deleteTodo(todo.id);\n      } else {\n        _this.props.editTodo(todo.id, _objectSpread({}, todo, {\n          text: text\n        }));\n      }\n\n      _this.setState({\n        editing: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          todo = _this$props.todo,\n          editTodo = _this$props.editTodo,\n          deleteTodo = _this$props.deleteTodo;\n      var element;\n\n      if (this.state.editing) {\n        element = React.createElement(TodoTextInput, {\n          text: todo.text,\n          editing: this.state.editing,\n          onSave: function onSave(text) {\n            return _this2.handleSave(todo, text);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        });\n      } else {\n        element = React.createElement(\"div\", {\n          className: \"view\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"toggle\",\n          type: \"checkbox\",\n          checked: todo.completed,\n          onChange: function onChange() {\n            editTodo(todo.id, _objectSpread({}, todo, {\n              completed: !todo.completed\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"label\", {\n          onDoubleClick: this.handleDoubleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, todo.text), React.createElement(\"button\", {\n          className: \"destroy\",\n          onClick: function onClick() {\n            return deleteTodo(todo.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"li\", {\n        className: classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, element);\n    }\n  }]);\n\n  return TodoItem;\n}(Component);\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired\n};\nexport { TodoItem as default };","map":{"version":3,"sources":["C:\\Users\\shiarora\\Projects\\cypress-egghead-course\\src\\components\\TodoItem.js"],"names":["React","Component","PropTypes","classnames","TodoTextInput","TodoItem","state","editing","handleDoubleClick","setState","handleSave","todo","text","length","props","deleteTodo","id","editTodo","element","completed","propTypes","object","isRequired","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport TodoTextInput from './TodoTextInput'\r\n\r\nexport default class TodoItem extends Component {\r\n  static propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    deleteTodo: PropTypes.func.isRequired,\r\n    editTodo: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    editing: false\r\n  }\r\n\r\n  handleDoubleClick = () => {\r\n    this.setState({ editing: true })\r\n  }\r\n\r\n  handleSave = (todo, text) => {\r\n    if (text.length === 0) {\r\n      this.props.deleteTodo(todo.id)\r\n    } else {\r\n      this.props.editTodo(todo.id, { ...todo, text: text })\r\n    }\r\n    this.setState({ editing: false })\r\n  }\r\n\r\n  render() {\r\n    const { todo, editTodo, deleteTodo } = this.props\r\n\r\n    let element\r\n    if (this.state.editing) {\r\n      element = (\r\n        <TodoTextInput text={todo.text}\r\n                       editing={this.state.editing}\r\n                       onSave={(text) => this.handleSave(todo, text)} />\r\n      )\r\n    } else {\r\n      element = (\r\n        <div className=\"view\">\r\n          <input className=\"toggle\"\r\n                 type=\"checkbox\"\r\n                 checked={todo.completed}\r\n                 onChange={() => {\r\n                   editTodo(todo.id, { ...todo, completed: !todo.completed })\r\n                 }\r\n                  } />\r\n          <label onDoubleClick={this.handleDoubleClick}>\r\n            {todo.text}\r\n          </label>\r\n          <button className=\"destroy\"\r\n                  onClick={() => deleteTodo(todo.id)} />\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <li className={classnames({\r\n        completed: todo.completed,\r\n        editing: this.state.editing\r\n      })}>\r\n        {element}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}